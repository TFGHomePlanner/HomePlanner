// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String
    email         String?   @unique
    emailVerified DateTime?
    passwordHash  String? 
    accounts      Account[]
    sessions      Session[]
    AdminGroup   Group[] @relation("UserAdmin")
    Groups Group[] @relation("Users")
    Message Message[]
}

model Group {
    id            String @id @default(cuid())
    Name          String
    CodeGroup     String @unique
    Messages      Message[]
    Admin         User @relation("UserAdmin", fields: [AdminId], references: [id])
    AdminId       String 
    Users         User[] @relation("Users") 

    @@index([AdminId])
}

model Message {
    Id String @id @default(cuid())
    Text  String
    Day DateTime
    UserId String
    Group Group @relation(fields: [GroupId], references: [id])
    GroupId String
    User User @relation(fields: [UserId], references: [id])


    @@index([UserId])
    @@index([GroupId])
  
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}


